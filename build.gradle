buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		maven {
      			url "https://plugins.gradle.org/m2/"
    		}
		mavenCentral()
	}
	dependencies {
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5-rc1")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jar {
	baseName = 'ic-gradle-uca'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/jacoco")
}

sonarqube {
	properties {
	property 'sonar.sourceEncoding', 'UTF-8'
	property 'sonar.projectKey', 'Gradle-IC'
        property 'sonar.host.url', 'http://172.17.0.1:9000'
        property 'sonar.projectName', 'IC Gradle UCA'
        property 'sonar.jacoco.reportPath', 'build/jacoco/**.exec'
	}
}

sourceSets {
    test {
        java.srcDir 'src/test/unit/java'
    }
    integration {
        java.srcDir 'src/test/integration/java'
        resources.srcDir 'src/test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
}
